{"version":3,"sources":["pages/Events.tsx","pages/Login.tsx","components/FormEvent.tsx","pages/EventDetail.tsx","components/PrivateRoute.tsx","App.tsx","index.tsx"],"names":["EventFields","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","user","setUser","setToken","token","useState","isModalVisible","setIsModalVisible","formInfo","setFormInfo","onFinish","useHistory","values","a","myHeaders","Headers","append","fetch","method","body","JSON","stringify","headers","res","json","data","error","showModal","getToken","username","email","password","access_token","console","handleOk","className","type","htmlType","onClick","undefined","title","visible","onOk","onCancel","name","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","Option","Select","RangePicker","DatePicker","validateMessages","types","number","range","FormEvent","setEvents","endpoint","setEvent","event","log","prevEvents","normalize","start_date","startEndDate","_d","end_date","category","online","postEvent","place","address","id","style","width","value","initialColumns","NAME","toUpperCase","dataIndex","key","FRONT_ID","render","row","to","CATEGORY","START_DATE","ONLINE","Events","events","columns","Fragment","dataSource","Meta","Card","EventDetail","idEvent","useParams","history","useEffect","getEventDetail","e","marginTop","actions","DeleteOutlined","prev","filter","push","loading","avatar","active","src","description","PrivateRoute","props","Component","component","isSignedIn","rest","routeProps","pathname","state","from","location","App","isLoading","getEvents","theme","mode","defaultSelectedKeys","path","exact","ReactDOM","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.205f1702.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Table, Col } from \"antd\";\r\nimport { uuid } from \"uuidv4\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormEvent from \"../components/FormEvent\";\r\nimport { User } from \"../App\";\r\n\r\nenum EventFields {\r\n  NAME = \"name\",\r\n  CATEGORY = \"category\",\r\n  PLACE = \"place\",\r\n  ADDRESS = \"address\",\r\n  START_DATE = \"start_date\",\r\n  END_DATE = \"end_date\",\r\n  ONLINE = \"online\",\r\n  ID = \"id\",\r\n  FRONT_ID = \"front_id\",\r\n}\r\n\r\nexport interface Event {\r\n  frontId?: string;\r\n  name: string;\r\n  category: \"Conferencia\" | \"Seminario\" | \"Congreso\" | \"Curso\";\r\n  place: string;\r\n  address: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  online: \"Virtual\" | \"Presencial\";\r\n  id?: number;\r\n  user?: number;\r\n}\r\n\r\ninterface Column {\r\n  title: string;\r\n  dataIndex: EventFields;\r\n  key: EventFields;\r\n  render?: any;\r\n}\r\n\r\nconst initialColumns: Column[] = [\r\n  {\r\n    title: EventFields.NAME.toUpperCase(),\r\n    dataIndex: EventFields.NAME,\r\n    key: EventFields.FRONT_ID,\r\n    // eslint-disable-next-line react/display-name\r\n    render: (name: string, row: Event) => {\r\n      return <Link to={`/events/${row.id}`}>{name}</Link>;\r\n    },\r\n  },\r\n  {\r\n    title: EventFields.CATEGORY.toUpperCase(),\r\n    dataIndex: EventFields.CATEGORY,\r\n    key: EventFields.CATEGORY,\r\n  },\r\n  {\r\n    title: EventFields.START_DATE.toUpperCase(),\r\n    dataIndex: EventFields.START_DATE,\r\n    key: EventFields.START_DATE,\r\n  },\r\n  {\r\n    title: EventFields.ONLINE.toUpperCase(),\r\n    dataIndex: EventFields.ONLINE,\r\n    key: EventFields.ONLINE,\r\n  },\r\n];\r\n\r\nconst initialEvents: Event[] = [];\r\n\r\ninterface Props {\r\n  user?: User;\r\n  setUser?: React.Dispatch<React.SetStateAction<User | undefined>>;\r\n  events: Event[];\r\n  setEvents: React.Dispatch<React.SetStateAction<Event[]>>;\r\n  token: string;\r\n  setToken: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\nconst Events = ({\r\n  user,\r\n  setUser,\r\n  events,\r\n  setEvents,\r\n  token,\r\n  setToken,\r\n}: Props): JSX.Element => {\r\n  const [columns, setColumns] = useState<Column[]>(initialColumns);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"mt-4\">\r\n        <FormEvent\r\n          method=\"POST\"\r\n          endpoint=\"/events\"\r\n          setEvents={setEvents}\r\n          user={user}\r\n          setUser={setUser}\r\n          token={token}\r\n          setToken={setToken}\r\n        ></FormEvent>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Table dataSource={events} columns={columns} />\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  DatePicker,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { User } from \"../App\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface UserInfo {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\ninterface Props {\r\n  user?: User;\r\n  setUser?: React.Dispatch<React.SetStateAction<User | undefined>>;\r\n  token: string;\r\n  setToken: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\nconst Login = ({ user, setUser, setToken, token }: Props): JSX.Element => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [formInfo, setFormInfo] = useState({});\r\n  const history = useHistory();\r\n\r\n  const onFinish = async (values: UserInfo) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const res = await fetch(\"/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(values),\r\n      headers: myHeaders,\r\n    });\r\n    const data = await res.json();\r\n    if (data.error === \"Email no existe, desea crear una cuenta nueva?\") {\r\n      setFormInfo(values);\r\n      return showModal();\r\n    }\r\n    getToken(values);\r\n    if (data && !data.error && setUser) {\r\n      setUser(data as User);\r\n    }\r\n  };\r\n\r\n  async function getToken(values: UserInfo) {\r\n    try {\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      const res = await fetch(\"/auth\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          username: values.email,\r\n          password: values.password,\r\n        }),\r\n        headers: myHeaders,\r\n      });\r\n      const data = await res.json();\r\n      setToken(data.access_token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () => {\r\n    setIsModalVisible(false);\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const res = await fetch(\"/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formInfo),\r\n      headers: myHeaders,\r\n    });\r\n    const data = await res.json();\r\n    if (data && !data.error && setUser) {\r\n      setUser(data as User);\r\n      getToken(formInfo as UserInfo);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.error(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <Row className=\"mt-4\">\r\n        <Col span={12} offset={6}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => {\r\n              if (setUser) setUser(undefined);\r\n            }}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      <Modal\r\n        title=\"Crear Cuenta\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Email No Existe Desea Crear Una Nueva Cuenta</p>\r\n      </Modal>\r\n      <Col span={12} offset={6}>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Correo\"\r\n            name=\"email\"\r\n            rules={[{ required: true, message: \"Please input your username!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Select, Input, Form, Button, DatePicker } from \"antd\";\r\nimport { Event } from \"../pages/Events\";\r\nimport { User } from \"../App\";\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n\r\ninterface Props {\r\n  setEvents?: React.Dispatch<React.SetStateAction<Event[]>>;\r\n  method: \"POST\" | \"DELETE\" | \"PUT\" | \"GET\";\r\n  endpoint: string;\r\n  event?: Event;\r\n  setEvent?: React.Dispatch<React.SetStateAction<Event | undefined>>;\r\n  user?: User;\r\n  setUser?: React.Dispatch<React.SetStateAction<User | undefined>>;\r\n  token: string;\r\n  setToken: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst FormEvent = ({\r\n  setEvents,\r\n  method,\r\n  endpoint,\r\n  event,\r\n  setEvent,\r\n  user,\r\n  setUser,\r\n  token,\r\n  setToken,\r\n}: Props): JSX.Element => {\r\n  async function postEvent(event: Event) {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append(\"Authorization\", `JWT ${token}`);\r\n    console.log(event);\r\n    try {\r\n      const res = await fetch(endpoint, {\r\n        method,\r\n        body: JSON.stringify(event),\r\n        headers: myHeaders,\r\n      });\r\n      const data = await res.json();\r\n      if (setEvent) setEvent(data);\r\n      if (setEvents) setEvents((prevEvents) => [...prevEvents, data]);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  const normalize = (values: any) => {\r\n    const start_date = `${values.startEndDate[0]._d}`;\r\n    const end_date = `${values.startEndDate[1]._d}`;\r\n    const category: string = values?.category ? values.category : \"Conferencia\";\r\n    const online: string = values?.online ? values.online : \"Conferencia\";\r\n\r\n    const newEvent: Event = {\r\n      name: values.name,\r\n      category: category as \"Conferencia\" | \"Seminario\" | \"Congreso\" | \"Curso\",\r\n      place: values.place,\r\n      address: values.address,\r\n      start_date,\r\n      end_date,\r\n      online: online as \"Virtual\" | \"Presencial\",\r\n      user: user?.id,\r\n    };\r\n    postEvent(newEvent);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"nest-messages\"\r\n      onFinish={(values) => normalize(values)}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"category\"}\r\n        label=\"Categoría\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Select style={{ width: 120 }}>\r\n          <Option value=\"\">-Escoge una opción-</Option>\r\n          <Option value=\"Conferencia\">Conferencia</Option>\r\n          <Option value=\"Seminario\">Seminario</Option>\r\n          <Option value=\"Congreso\">Congreso</Option>\r\n          <Option value=\"Curso\">Curso</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item name={\"place\"} label=\"Place\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"address\"}\r\n        label=\"Dirección\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"startEndDate\"}\r\n        label=\"Fecha\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <RangePicker />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"online\"}\r\n        label=\"Presencialidad\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Select style={{ width: 120 }}>\r\n          <Option value=\"\">-Escoge una opción-</Option>\r\n          <Option value=\"Virtual\">Virtual</Option>\r\n          <Option value=\"Presencial\">Presencial</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormEvent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Spin, Card, Avatar, Skeleton, Row, Col } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Event } from \"./Events\";\r\nimport FormEvent from \"../components/FormEvent\";\r\nconst { Meta } = Card;\r\n\r\ninterface Props {\r\n  setEvents: React.Dispatch<React.SetStateAction<Event[]>>;\r\n  token: string;\r\n  setToken: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst EventDetail = ({ setEvents, token, setToken }: Props): JSX.Element => {\r\n  const { idEvent } = useParams<{ idEvent: string }>();\r\n  const history = useHistory();\r\n  const [event, setEvent] = useState<Event | undefined>(undefined);\r\n  useEffect(() => {\r\n    async function getEventDetail() {\r\n      const myHeaders = new Headers();\r\n      myHeaders.append(\"Authorization\", `JWT ${token}`);\r\n      const res = await fetch(`/events/${idEvent}`, { headers: myHeaders });\r\n      const data = await res.json();\r\n      setEvent(data);\r\n    }\r\n    try {\r\n      getEventDetail();\r\n    } catch (e) {\r\n      setEvent(undefined);\r\n    }\r\n  }, []);\r\n\r\n  const deleteEvent = () => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `JWT ${token}`);\r\n    fetch(`/events/${idEvent}`, { method: \"DELETE\", headers: myHeaders });\r\n    setEvents((prev) =>\r\n      prev.filter((event) => ((event?.id ?? \"\") as string) !== idEvent)\r\n    );\r\n    setEvent(undefined);\r\n    history.push(\"/events\");\r\n  };\r\n\r\n  if (event === undefined) {\r\n    <Skeleton avatar paragraph={{ rows: 6 }} />;\r\n  }\r\n  if (event === null) {\r\n    return <div>El evento actual no existe, regresa aquí</div>;\r\n  }\r\n\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      <Col offset={6}>\r\n        <Card\r\n          style={{ width: 300, marginTop: 16 }}\r\n          actions={[<DeleteOutlined key=\"delete\" onClick={deleteEvent} />]}\r\n        >\r\n          <Skeleton loading={event === undefined} avatar active>\r\n            <Meta\r\n              avatar={\r\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n              }\r\n              title={event?.name}\r\n              description={event?.category}\r\n            />\r\n            <p>{event?.place}</p>\r\n            <p>{event?.address}</p>\r\n            <p>{event?.start_date}</p>\r\n            <p>{event?.end_date}</p>\r\n            <p>{event?.online}</p>\r\n          </Skeleton>\r\n        </Card>\r\n      </Col>\r\n      <Col>\r\n        <FormEvent\r\n          method=\"PUT\"\r\n          endpoint={`/events/${idEvent}`}\r\n          event={event}\r\n          token={token}\r\n          setToken={setToken}\r\n          setEvent={setEvent}\r\n        ></FormEvent>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default EventDetail;\r\n","import React from \"react\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\n\r\ninterface PrivateRouteProps extends RouteProps {\r\n  // tslint:disable-next-line:no-any\r\n  component: any;\r\n  isSignedIn: boolean;\r\n}\r\n\r\nconst PrivateRoute = (props: PrivateRouteProps) => {\r\n  const { component: Component, isSignedIn, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        isSignedIn ? (\r\n          <Component {...routeProps} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: routeProps.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Browser,\n  Link,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport { Menu } from \"antd\";\nimport { Event } from \"./pages/Events\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nexport interface User {\n  id: number;\n  email: string;\n  password?: string;\n  events: Event[];\n}\nfunction App(): JSX.Element {\n  const [user, setUser] = useState<User | undefined>();\n  const [token, setToken] = useState<string>(\"\");\n  const [events, setEvents] = useState<Event[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (user && user.email) {\n      getEvents(user.email);\n    }\n  }, [token]);\n\n  async function getEvents(email: string) {\n    const myHeaders = new Headers();\n    console.log(token);\n    myHeaders.append(\"Authorization\", `JWT ${token}`);\n    const res = await fetch(`/events?email=${email}`, { headers: myHeaders });\n    const data = await res.json();\n    if (data && !data.error) {\n      setEvents(data as Event[]);\n    }\n  }\n\n  async function getUser(email: string, token: string) {\n    const res = await fetch(`/login?email=${email}`);\n    const data = await res.json();\n    setUser(data as User);\n    setToken(token);\n  }\n\n  return (\n    <Browser>\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n        <Menu.Item key=\"1\">\n          <Link to=\"/\">{!user ? \"Login\" : user.email}</Link>\n        </Menu.Item>\n        {!!user && (\n          <Menu.Item key=\"2\">\n            {\" \"}\n            <Link to={user?.id ? \"/events\" : \"/\"}>Events</Link>\n          </Menu.Item>\n        )}\n      </Menu>\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          component={() => (\n            <Login\n              token={token}\n              setToken={setToken}\n              user={user}\n              setUser={setUser}\n            />\n          )}\n        />\n        <PrivateRoute\n          path=\"/events\"\n          exact\n          isSignedIn={isLoading || !!user}\n          component={() => (\n            <Events\n              events={events}\n              setEvents={setEvents}\n              user={user}\n              setUser={setUser}\n              token={token}\n              setToken={setToken}\n            />\n          )}\n        />\n        <PrivateRoute\n          isSignedIn={isLoading || !!user}\n          path=\"/events/:idEvent\"\n          exact\n          component={() => (\n            <EventDetail\n              token={token}\n              setToken={setToken}\n              setEvents={setEvents}\n            />\n          )}\n        />\n      </Switch>\n    </Browser>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}